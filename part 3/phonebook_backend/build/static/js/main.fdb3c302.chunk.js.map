{"version":3,"sources":["SearchBar.js","PersonForm.js","Person.js","PersonList.js","services/infos.js","Notification.js","App.js","index.js"],"names":["SearchBar","onChange","PersonForm","onSubmit","nameVal","noVal","nameChange","noChange","value","type","Person","person","handleRemove","name","number","onClick","id","PersonList","filtered","handleDelete","map","baseUrl","axios","get","newObject","post","delete","updatedPerson","put","Notification","message","className","App","useState","persons","setPersons","newName","setNewName","newNo","setNewNo","setFiltered","addedMessage","setMessage","useEffect","console","log","personService","then","response","data","event","filter","toLowerCase","includes","target","preventDefault","some","window","confirm","find","setTimeout","catch","error","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fdb3c302.chunk.js","sourcesContent":["const SearchBar = ({ onChange }) => {\r\n  return (\r\n    <div>\r\n      filter shown with <input onChange={onChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","const PersonForm = ({ onSubmit, nameVal, noVal, nameChange, noChange }) => {\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <div>\r\n        name: <input value={nameVal} onChange={nameChange} />\r\n      </div>\r\n      <div>\r\n        number: <input value={noVal} onChange={noChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","const Person = ({person,handleRemove}) =>{\r\n\r\n    return <div>\r\n    {person.name} {person.number}\r\n    <button onClick = {()=>handleRemove(person.id)}>delete</button>\r\n  </div>\r\n}\r\n\r\nexport default Person;","import Person from \"./Person\"\r\n\r\nconst PersonList = ({ filtered,handleDelete }) => {\r\n  \r\n  return (\r\n    <div>\r\n      {filtered.map((person) => (\r\n        <Person key={person.id} person={person} handleRemove={handleDelete}/>\r\n        \r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonList;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/phones\";\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  return axios.post(baseUrl, newObject);\r\n};\r\n\r\nconst remove = (id) => {\r\n  return axios.delete(baseUrl + \"/\" + id);\r\n};\r\n\r\nconst update = (id, updatedPerson) => {\r\n  return axios.put(baseUrl + \"/\" + id, updatedPerson);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  remove,\r\n  update,\r\n};\r\n","const Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"added\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification;","import React, { useState, useEffect } from \"react\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport PersonForm from \"./PersonForm\";\r\nimport PersonList from \"./PersonList\";\r\nimport personService from \"./services/infos.js\";\r\nimport Notification from \"./Notification\";\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNo, setNewNo] = useState(\"\");\r\n  const [filtered, setFiltered] = useState([]);\r\n  const [addedMessage, setMessage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    console.log(\"effect\");\r\n    personService.getAll().then((response) => {\r\n      console.log(\"promise fullfilled\");\r\n      setPersons(response.data);\r\n      setFiltered(response.data);\r\n    });\r\n  }, []);\r\n\r\n  const handleInputChange = (event) => {\r\n    setNewName(event.target.value);\r\n  };\r\n\r\n  const handleNoChange = (event) => {\r\n    setNewNo(event.target.value);\r\n  };\r\n\r\n  const handleSearch = (event) => {\r\n    setFiltered(\r\n      persons.filter((person) =>\r\n        person.name.toLowerCase().includes(event.target.value.toLowerCase())\r\n      )\r\n    );\r\n  };\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault();\r\n    if (persons.some((person) => person.name === newName)) {\r\n      if (window.confirm(`Change ${newName}'s number with this one?`)) {\r\n        const updatedPerson = {\r\n          name: newName,\r\n          number: newNo,\r\n        };\r\n        personService\r\n          .update(\r\n            persons.find((person) => person.name === newName).id,\r\n            updatedPerson\r\n          )\r\n          .then((response) => {\r\n            console.log(response.data);\r\n            personService.getAll().then((response) => {\r\n              setPersons(response.data);\r\n              setFiltered(response.data);\r\n            });\r\n            setMessage(`${newName}'s number is updated.`);\r\n            setTimeout(() => {\r\n              setMessage(null);\r\n            }, 5000);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            setMessage(`${newName} was already deleted from the server.`);\r\n            setTimeout(() => {\r\n              setMessage(null);\r\n            }, 5000);\r\n          });\r\n      }\r\n    } else {\r\n      const personObj = {\r\n        name: newName,\r\n        number: newNo,\r\n      };\r\n\r\n      personService\r\n        .create(personObj)\r\n        .then((response) => {\r\n          personService.getAll().then((response) => {\r\n            setPersons(response.data);\r\n            setFiltered(response.data);\r\n          });\r\n          setMessage(`${newName} is added to phonebook.`);\r\n          setTimeout(() => {\r\n            setMessage(null);\r\n          }, 5000);\r\n\r\n          console.log(response);\r\n        })\r\n        .catch((error) => {\r\n          setMessage(error.response.data);\r\n          setTimeout(() => {\r\n            setMessage(null);\r\n          }, 5000);\r\n        });\r\n    }\r\n\r\n    setNewName(\"\");\r\n    setNewNo(\"\");\r\n  };\r\n\r\n  const deletePerson = (id) => {\r\n    if (window.confirm(\"Do you really want to remove this person?\")) {\r\n      personService.remove(id).then((response) => {\r\n        setFiltered(filtered.filter((element) => element.id !== id));\r\n        setPersons(persons.filter((element) => element.id !== id));\r\n        console.log(response);\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={addedMessage} />\r\n      <SearchBar onChange={handleSearch} />\r\n      <h2>add new entry</h2>\r\n      <PersonForm\r\n        onSubmit={addPerson}\r\n        nameVal={newName}\r\n        noVal={newNo}\r\n        nameChange={handleInputChange}\r\n        noChange={handleNoChange}\r\n      />\r\n      <h2>Numbers</h2>\r\n      <PersonList filtered={filtered} handleDelete={deletePerson} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}